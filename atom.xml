<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小熊的作坊</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://vegard-bear.github.io/"/>
  <updated>2021-03-04T02:08:53.198Z</updated>
  <id>https://vegard-bear.github.io/</id>
  
  <author>
    <name>小熊</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>leetcode-312</title>
    <link href="https://vegard-bear.github.io/2021/03/04/leetcode-312/"/>
    <id>https://vegard-bear.github.io/2021/03/04/leetcode-312/</id>
    <published>2021-03-04T02:08:53.000Z</published>
    <updated>2021-03-04T02:08:53.198Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【Go源码解析8】for和range循环</title>
    <link href="https://vegard-bear.github.io/2021/03/02/go-sourcecode-for/"/>
    <id>https://vegard-bear.github.io/2021/03/02/go-sourcecode-for/</id>
    <published>2021-03-02T06:47:21.000Z</published>
    <updated>2021-03-04T14:22:19.677Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;本节将深入分析 Go 语言的两种循环，也就是 for 循环和 for-range 循环，我们会分析这两种循环的运行时结构以及它们的实现原理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
      <category term="go" scheme="https://vegard-bear.github.io/categories/go/"/>
    
    
      <category term="go" scheme="https://vegard-bear.github.io/tags/go/"/>
    
      <category term="源码解析" scheme="https://vegard-bear.github.io/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
      <category term="循环" scheme="https://vegard-bear.github.io/tags/%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>【leetcode-887】鸡蛋掉落</title>
    <link href="https://vegard-bear.github.io/2021/02/28/leetcode-887/"/>
    <id>https://vegard-bear.github.io/2021/02/28/leetcode-887/</id>
    <published>2021-02-28T03:16:27.000Z</published>
    <updated>2021-02-28T03:23:22.092Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/super-egg-drop/&quot;
        
      
    
    </summary>
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/categories/leetcode/"/>
    
    
      <category term="动态规划" scheme="https://vegard-bear.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="二分" scheme="https://vegard-bear.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>【基金02】基金入门</title>
    <link href="https://vegard-bear.github.io/2021/02/08/fund-02/"/>
    <id>https://vegard-bear.github.io/2021/02/08/fund-02/</id>
    <published>2021-02-08T13:54:54.000Z</published>
    <updated>2021-02-10T13:27:00.222Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;基金入门&quot;&gt;&lt;a href=&quot;#基金入门&quot; class=&quot;headerlink&quot; title=&quot;基金入门&quot;&gt;&lt;/a&gt;基金入门&lt;/h1&gt;&lt;p&gt;&lt;img
        
      
    
    </summary>
    
      <category term="投资" scheme="https://vegard-bear.github.io/categories/%E6%8A%95%E8%B5%84/"/>
    
    
      <category term="基金" scheme="https://vegard-bear.github.io/tags/%E5%9F%BA%E9%87%91/"/>
    
  </entry>
  
  <entry>
    <title>【基金01】投资的基石</title>
    <link href="https://vegard-bear.github.io/2021/02/06/fund-01/"/>
    <id>https://vegard-bear.github.io/2021/02/06/fund-01/</id>
    <published>2021-02-06T09:57:03.000Z</published>
    <updated>2021-02-10T13:27:00.218Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;投资的基石&quot;&gt;&lt;a href=&quot;#投资的基石&quot; class=&quot;headerlink&quot; title=&quot;投资的基石&quot;&gt;&lt;/a&gt;投资的基石&lt;/h1&gt;&lt;p&gt;&lt;img
        
      
    
    </summary>
    
      <category term="投资" scheme="https://vegard-bear.github.io/categories/%E6%8A%95%E8%B5%84/"/>
    
    
      <category term="基金" scheme="https://vegard-bear.github.io/tags/%E5%9F%BA%E9%87%91/"/>
    
  </entry>
  
  <entry>
    <title>【Go源码解析7】反射</title>
    <link href="https://vegard-bear.github.io/2021/01/26/go-sourcecode-reflect/"/>
    <id>https://vegard-bear.github.io/2021/01/26/go-sourcecode-reflect/</id>
    <published>2021-01-26T14:20:28.000Z</published>
    <updated>2021-01-26T14:21:32.726Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;虽然在大多数的应用和服务中并不常见，但是很多框架都依赖 Go 语言的反射机制简化代码。因为 Go 语言的语法元素很少、设计简单，所以它没有特别强的表达能力，但是 Go 语言的 reflect
        
      
    
    </summary>
    
      <category term="go" scheme="https://vegard-bear.github.io/categories/go/"/>
    
    
      <category term="go" scheme="https://vegard-bear.github.io/tags/go/"/>
    
      <category term="源码解析" scheme="https://vegard-bear.github.io/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
      <category term="反射" scheme="https://vegard-bear.github.io/tags/%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>【leetcode-651】4键键盘</title>
    <link href="https://vegard-bear.github.io/2021/01/24/leetcode-651/"/>
    <id>https://vegard-bear.github.io/2021/01/24/leetcode-651/</id>
    <published>2021-01-24T08:06:31.000Z</published>
    <updated>2021-01-24T08:07:55.103Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/4-keys-keyboard/&quot;
        
      
    
    </summary>
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/tags/leetcode/"/>
    
      <category term="动态规划" scheme="https://vegard-bear.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>【leetcode-10】正则表达式匹配</title>
    <link href="https://vegard-bear.github.io/2021/01/23/leetcode-10/"/>
    <id>https://vegard-bear.github.io/2021/01/23/leetcode-10/</id>
    <published>2021-01-23T10:01:50.000Z</published>
    <updated>2021-01-23T10:04:14.762Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/tags/leetcode/"/>
    
      <category term="动态规划" scheme="https://vegard-bear.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>【leetcode-1312】让字符串成为回文串的最少插入次数</title>
    <link href="https://vegard-bear.github.io/2021/01/21/leetcode-1312/"/>
    <id>https://vegard-bear.github.io/2021/01/21/leetcode-1312/</id>
    <published>2021-01-21T09:51:26.000Z</published>
    <updated>2021-01-21T09:55:20.569Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/tags/leetcode/"/>
    
      <category term="动态规划" scheme="https://vegard-bear.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>【Go源码解析6】接口</title>
    <link href="https://vegard-bear.github.io/2021/01/20/go-sourcecode-interface/"/>
    <id>https://vegard-bear.github.io/2021/01/20/go-sourcecode-interface/</id>
    <published>2021-01-20T14:51:30.000Z</published>
    <updated>2021-01-21T09:51:56.367Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;Go 语言中的接口是一组方法的签名，它是 Go 语言的重要组成部分。使用接口能够让我们写出易于测试的代码，然而很多工程师对 Go
        
      
    
    </summary>
    
      <category term="go" scheme="https://vegard-bear.github.io/categories/go/"/>
    
    
      <category term="go" scheme="https://vegard-bear.github.io/tags/go/"/>
    
      <category term="源码解析" scheme="https://vegard-bear.github.io/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
      <category term="接口" scheme="https://vegard-bear.github.io/tags/%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>【leetcode-516】最长回文子序列</title>
    <link href="https://vegard-bear.github.io/2021/01/19/leetcode-516/"/>
    <id>https://vegard-bear.github.io/2021/01/19/leetcode-516/</id>
    <published>2021-01-19T14:08:39.000Z</published>
    <updated>2021-01-22T03:00:18.461Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/tags/leetcode/"/>
    
      <category term="动态规划" scheme="https://vegard-bear.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>【Go 源码解析5】函数调用</title>
    <link href="https://vegard-bear.github.io/2021/01/18/go-sourcecode-functioncall/"/>
    <id>https://vegard-bear.github.io/2021/01/18/go-sourcecode-functioncall/</id>
    <published>2021-01-18T11:29:00.000Z</published>
    <updated>2021-02-02T14:38:41.451Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;函数是 Go 语言的一等公民，掌握和理解函数的调用过程是我们深入学习 Go 无法跳过的，本节将从函数的调用惯例和参数传递方法两个方面分别介绍函数的执行过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
      <category term="go" scheme="https://vegard-bear.github.io/categories/go/"/>
    
    
      <category term="go" scheme="https://vegard-bear.github.io/tags/go/"/>
    
      <category term="源码解析" scheme="https://vegard-bear.github.io/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
      <category term="函数" scheme="https://vegard-bear.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>【leetcode-72】编辑距离</title>
    <link href="https://vegard-bear.github.io/2021/01/17/leetcode-72/"/>
    <id>https://vegard-bear.github.io/2021/01/17/leetcode-72/</id>
    <published>2021-01-17T06:41:46.000Z</published>
    <updated>2021-01-17T06:43:13.771Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/edit-distance/&quot;
        
      
    
    </summary>
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/tags/leetcode/"/>
    
      <category term="动态规划" scheme="https://vegard-bear.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>【leetcode-1143】最长公共子序列</title>
    <link href="https://vegard-bear.github.io/2021/01/16/leetcode-1143/"/>
    <id>https://vegard-bear.github.io/2021/01/16/leetcode-1143/</id>
    <published>2021-01-16T08:20:55.000Z</published>
    <updated>2021-01-16T08:27:18.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/tags/leetcode/"/>
    
      <category term="动态规划" scheme="https://vegard-bear.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>【leetcode-53】最大子序和</title>
    <link href="https://vegard-bear.github.io/2021/01/11/leetcode-53/"/>
    <id>https://vegard-bear.github.io/2021/01/11/leetcode-53/</id>
    <published>2021-01-11T01:47:53.000Z</published>
    <updated>2021-01-14T07:41:45.768Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/maximum-subarray/&quot;
        
      
    
    </summary>
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/tags/leetcode/"/>
    
      <category term="动态规划" scheme="https://vegard-bear.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>【leetcode-354】俄罗斯套娃信封问题</title>
    <link href="https://vegard-bear.github.io/2021/01/10/leetcode-354/"/>
    <id>https://vegard-bear.github.io/2021/01/10/leetcode-354/</id>
    <published>2021-01-10T11:52:54.000Z</published>
    <updated>2021-01-15T15:00:44.620Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/tags/leetcode/"/>
    
      <category term="动态规划" scheme="https://vegard-bear.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>【leetcode-300】最长递增子序列</title>
    <link href="https://vegard-bear.github.io/2021/01/08/leetcode-300/"/>
    <id>https://vegard-bear.github.io/2021/01/08/leetcode-300/</id>
    <published>2021-01-08T02:55:53.000Z</published>
    <updated>2021-01-13T15:04:44.511Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="https://vegard-bear.github.io/tags/leetcode/"/>
    
      <category term="动态规划" scheme="https://vegard-bear.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>【Go源码解析4】字符串</title>
    <link href="https://vegard-bear.github.io/2021/01/07/go-sourcecode-string/"/>
    <id>https://vegard-bear.github.io/2021/01/07/go-sourcecode-string/</id>
    <published>2021-01-07T06:39:59.000Z</published>
    <updated>2021-01-31T13:54:55.014Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;字符串是 Go
        
      
    
    </summary>
    
      <category term="go" scheme="https://vegard-bear.github.io/categories/go/"/>
    
    
      <category term="go" scheme="https://vegard-bear.github.io/tags/go/"/>
    
      <category term="源码解析" scheme="https://vegard-bear.github.io/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
      <category term="字符串" scheme="https://vegard-bear.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>【Go源码解析3】哈希表</title>
    <link href="https://vegard-bear.github.io/2021/01/07/go-sourcecode-map/"/>
    <id>https://vegard-bear.github.io/2021/01/07/go-sourcecode-map/</id>
    <published>2021-01-07T03:21:37.000Z</published>
    <updated>2021-01-07T03:29:55.111Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;本节会介绍 Go
        
      
    
    </summary>
    
      <category term="go" scheme="https://vegard-bear.github.io/categories/go/"/>
    
    
      <category term="go" scheme="https://vegard-bear.github.io/tags/go/"/>
    
      <category term="源码解析" scheme="https://vegard-bear.github.io/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
      <category term="map" scheme="https://vegard-bear.github.io/tags/map/"/>
    
  </entry>
  
  <entry>
    <title>【Go源码解析2】切片</title>
    <link href="https://vegard-bear.github.io/2021/01/06/go-sourcecode-slice/"/>
    <id>https://vegard-bear.github.io/2021/01/06/go-sourcecode-slice/</id>
    <published>2021-01-06T07:05:43.000Z</published>
    <updated>2021-02-01T14:39:56.935Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;上一节介绍的数组在 Go 语言中没那么常用，更常用的数据结构是切片，即动态数组，其长度并不固定，我们可以向切片中追加元素，它会在容量不足时自动扩容。&lt;/p&gt;
&lt;p&gt;这一节我们就来看看Go语言中切片的底层实现逻辑。&lt;/p&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
      <category term="go" scheme="https://vegard-bear.github.io/categories/go/"/>
    
    
      <category term="go" scheme="https://vegard-bear.github.io/tags/go/"/>
    
      <category term="源码解析" scheme="https://vegard-bear.github.io/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
      <category term="切片" scheme="https://vegard-bear.github.io/tags/%E5%88%87%E7%89%87/"/>
    
  </entry>
  
</feed>
